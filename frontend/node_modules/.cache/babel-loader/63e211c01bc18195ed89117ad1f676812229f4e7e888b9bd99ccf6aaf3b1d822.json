{"ast":null,"code":"var _jsxFileName = \"/home/dog/ino/WiFi-tempRH/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport snowflake from './snowflaketime.svg';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport API from './api/API.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [current, setCurrent] = useState(null);\n  const [hourData, setHourData] = useState(null);\n\n  // Reset displayed data on screen on load\n  useEffect(() => {\n    // Gets data from a backend request, then sets 'data' to the result\n    API.getCurrent().then(json => setCurrent(json));\n    API.getHour().then(json => {\n      json.map();\n      console.log(`I got response: ${json}`);\n      setHourData(json);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: snowflake,\n        className: \"App-logo\",\n        alt: \"SMOW\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), !current ? 'Loading...' : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temp: \", current.temp, \"\\xB0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"RH: \", current.rh, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), !hourData ? 'Loading...' : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hour data: \", hourData]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tc+a3yg8HEyDcw/KQUmSHI7G1AE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["snowflake","React","useState","useEffect","API","jsxDEV","_jsxDEV","App","_s","current","setCurrent","hourData","setHourData","getCurrent","then","json","getHour","map","console","log","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","temp","rh","_c","$RefreshReg$"],"sources":["/home/dog/ino/WiFi-tempRH/frontend/src/App.js"],"sourcesContent":["import snowflake from './snowflaketime.svg';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport API from './api/API.js';\n\nfunction App() {\n\n  const [current, setCurrent] = useState(null);\n  const [hourData, setHourData] = useState(null);\n\n  // Reset displayed data on screen on load\n  useEffect(() => {\n    // Gets data from a backend request, then sets 'data' to the result\n    API.getCurrent().then(json => setCurrent(json));\n    API.getHour().then(json => {\n      json.map();\n      console.log(`I got response: ${json}`);\n      setHourData(json);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={snowflake} className=\"App-logo\" alt=\"SMOW\" />\n        \n        {/* If no current data, display \"Loading\". If there is current data, display it! */}\n        {!current ? 'Loading...' :\n          <div className=\"dataWrapper\">\n            <p>Temp: {current.temp}&deg;F</p>\n            <p>RH: {current.rh}%</p>\n          </div>\n        }\n\n        {!hourData ? 'Loading...' :\n          <div className=\"dataWrapper\">\n            <p>Hour data: {hourData}</p>\n          </div>\n        }\n\n      </header>\n    </div>\n  );\n\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd;IACAC,GAAG,CAACS,UAAU,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIL,UAAU,CAACK,IAAI,CAAC,CAAC;IAC/CX,GAAG,CAACY,OAAO,CAAC,CAAC,CAACF,IAAI,CAACC,IAAI,IAAI;MACzBA,IAAI,CAACE,GAAG,CAAC,CAAC;MACVC,OAAO,CAACC,GAAG,CAAE,mBAAkBJ,IAAK,EAAC,CAAC;MACtCH,WAAW,CAACG,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBf,OAAA;MAAQc,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5Bf,OAAA;QAAKgB,GAAG,EAAEtB,SAAU;QAACoB,SAAS,EAAC,UAAU;QAACG,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAGtD,CAAClB,OAAO,GAAG,YAAY,gBACtBH,OAAA;QAAKc,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1Bf,OAAA;UAAAe,QAAA,GAAG,QAAM,EAACZ,OAAO,CAACmB,IAAI,EAAC,OAAM;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjCrB,OAAA;UAAAe,QAAA,GAAG,MAAI,EAACZ,OAAO,CAACoB,EAAE,EAAC,GAAC;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,EAGP,CAAChB,QAAQ,GAAG,YAAY,gBACvBL,OAAA;QAAKc,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1Bf,OAAA;UAAAe,QAAA,GAAG,aAAW,EAACV,QAAQ;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGV;AAACnB,EAAA,CAvCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}